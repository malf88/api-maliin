version: '3'
services:
  api-app:
    image: api-app
    container_name: api
    restart: unless-stopped
    build:
      context: ./
      dockerfile: docker/Dockerfile
      args:
        - "BUILD_APP_ENV=${APP_ENV}"
    env_file:
      - .env
    volumes:
      - ./:/var/www/
    environment:
      - CONTAINER_ROLE=app
  api-scheduler:
    image: api-app
    container_name: scheduler-api
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - api-app
    environment:
      CONTAINER_ROLE: scheduler
  api-queue:
    image: api-app
    container_name: api-queue
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - api-app
    environment:
      CONTAINER_ROLE: queue
  api-redis:
    container_name: api-redis
    image: redis
    restart: unless-stopped
    env_file:
      - redis.env
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT}:6379
  nginx:
    image: nginx:1.17-alpine
    container_name: api-nginx
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - api-app
    ports:
      - ${PORT}:80
    volumes:
      - ./:/var/www:cached
      - ./docker/nginx:/etc/nginx/conf.d
networks:
  default:
    external:
      name: webproxy
