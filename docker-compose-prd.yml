version: '3.5'
services:
  api-app:
    image: api-app
    container_name: api
    restart: unless-stopped
    build:
      context: ./
      dockerfile: docker/Dockerfile
      args:
        - "BUILD_APP_ENV=${APP_ENV}"
    env_file:
      - .env
    environment:
      - CONTAINER_ROLE=app
    healthcheck:
      test: php -i || exit 1
      interval: 30s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - traefik-public
  api-scheduler:
    image: api-app
    container_name: scheduler-api
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - api-app
    environment:
      CONTAINER_ROLE: scheduler
    networks:
      - traefik-public
  api-redis:
    container_name: api-redis
    image: redis
    restart: unless-stopped
    env_file:
      - .env
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - traefik-public
    volumes:
      - ./redis-volume:/data
  api-queue:
    image: api-app
    container_name: api-queue
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - api-app
    environment:
      CONTAINER_ROLE: queue
    networks:
      - traefik-public
  nginx:
    image: nginx:1.17-alpine
    container_name: api-nginx
    restart: unless-stopped
    env_file:
      - .env
    deploy:
      labels:
        - traefik.enable=true
        - traefik.port=80
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.api_maliin-http.rule=Host(`api.malf88.xyz`)
        - traefik.http.routers.api_maliin-http.entrypoints=http
        - traefik.http.routers.api_maliin-http.middlewares=https-redirect
        - traefik.http.routers.api_maliin-https.rule=Host(`api.malf88.xyz`)
        - traefik.http.routers.api_maliin-https.entrypoints=https
        - traefik.http.routers.api_maliin-https.tls=true
        - traefik.http.routers.api_maliin-https.tls.certresolver=le
        - traefik.http.services.api_maliin.loadbalancer.server.port=80
      replicas: 3
    depends_on:
      - api-app
    healthcheck:
      test: nginx -t || exit 1
      interval: 20s
      retries: 10
      start_period: 30s
      timeout: 10s
    ports:
      - ${PORT}:80
    volumes:
      - ./:/var/www/
      - ./docker/nginx:/etc/nginx/conf.d
    networks:
      - traefik-public
networks:
  traefik-public:
    external: true
  node_network:
    external: true
    attachable: true
