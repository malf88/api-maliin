version: '3.4'
services:
  api-app:
    image: api-app
    container_name: api
    restart: unless-stopped
    build:
      context: ./
      dockerfile: docker/Dockerfile_debug
      args:
        - "BUILD_APP_ENV=${APP_ENV}"
    network_mode: host
    healthcheck:
      test: curl --fail http://localhost || exit 1
      interval: 10s
      retries: 5
      start_period: 20s
      timeout: 10s
    env_file:
      - .env
    volumes:
      - ./:/var/www/
    environment:
      - CONTAINER_ROLE=app
  api-scheduler:
    image: api-app
    container_name: scheduler-api
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - api-app
    environment:
      CONTAINER_ROLE: scheduler
  api-queue:
    image: api-app
    container_name: api-queue
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - api-app
    volumes:
      - ./:/var/www/
    network_mode: host
    environment:
      CONTAINER_ROLE: queue
  composer:
    image: composer:2.3.2
    container_name: composer
    env_file:
      - .env
    volumes:
      - ./:/app
  api-redis:
    container_name: api-redis
    image: redis
    restart: unless-stopped
    env_file:
      - .env
    command: redis-server --requirepass ${REDIS_PASSWORD}
    network_mode: host
    volumes:
      - ./redis-volume:/data

  api-nginx:
    image: nginx:1.17-alpine
    container_name: api-nginx
    restart: unless-stopped
    depends_on:
      - api-app
    env_file:
      - .env
    network_mode: host
    volumes:
      - ./:/var/www
      - ./docker/local/nginx:/etc/nginx/conf.d
