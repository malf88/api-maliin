<?php

namespace Tests\Unit\Account;

use App\Models\User;
use App\Modules\Account\Business\AccountShareBusiness;
use App\Modules\Account\Impl\AccountRepositoryInterface;
use App\Modules\Account\Impl\AccountShareRepositoryInterface;
use App\Modules\Account\Repository\AccountRepository;
use Illuminate\Support\Collection;
use Illuminate\Support\Facades\Auth;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
use Tests\TestCase;
use Tests\Unit\Account\Factory\DataFactory;

class AccountShareBusinessTest extends TestCase
{
    private AccountShareBusiness $accountShareBusiness;
    private DataFactory $dataFactory;
    public function setUp(): void
    {
        $this->dataFactory = new DataFactory();
        $accountRespository = $this->getRepository();
        $this->accountShareBusiness = new AccountShareBusiness($accountRespository);
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function getRepository():AccountShareRepositoryInterface
    {
        $mockAccountRepository = $this->createMock(AccountRepository::class);
        $mockAccountRepository->method('findUsersSharedByAccount')
            ->willReturn(Collection::make([
                User::factory(2)
            ]));
        return $mockAccountRepository;

    }

    /**
     * @test
     */
    public function deveDispararExecaoAoListarCompartilhamento(){
        $this->dataFactory->configureUserSession(true);
        $accountId = 1;
        $this->expectException(NotFoundHttpException::class);
        $userList = $this->accountShareBusiness->findUserInSharedAccount($accountId);

    }
    /**
     * @test
     */
    public function deveListarCompartilhamento(){
        $this->dataFactory->configureUserSession(true);
        $accountId = 1;
        $this->expectException(NotFoundHttpException::class);
        $userList = $this->accountShareBusiness->findUserInSharedAccount($accountId);

        $this->assertCount(2, $userList);
    }

}
